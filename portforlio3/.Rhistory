wisk3raw <-read.csv(file="~/wisk3raw.cvs")
filepath <- "https://quantdev.ssri.psu.edu/sites/qdev/files/wisc3raw.csv"
wisc3raw <- read.csv(file=url(filepath),header=TRUE)
View(wisc3raw)
dput(colnames(wisc3raw))
var_names_sub <- c("id",
"verb1","verb2","verb4","verb6",
"perfo1","perfo2","perfo4","perfo6",
"momed","grad")
wiscraw <- wisc3raw[,var_names_sub]
print(head(var_names_sub,30))
View(wiscraw)
str(wiscraw)
before reshaping, let's learn reshape()
?reshape()
id<-c(1,1,2,2)
time<-c(1,2,1,2)
depress<-c(5,3,6,2)
anxiety<-c(6,5,1,4)
data.frame(id,time,depress,anxiety)
small<-data.frame(id,time,depress,anxiety)
View(small)
id<-c(1,1,2,2)
time<-c(1,2,1,2)
depress<-c(5,3,6,2)
anxiety<-c(6,5,1,4)
small<-data.frame(id,time,depress,anxiety)
str(small)
```{r}
id<-c(1,1,2,2)
time<-c(1,2,1,2)
depress<-c(5,3,6,2)
anxiety<-c(6,5,1,4)
small<-data.frame(id,time,depress,anxiety)
str(small)
library(reshape)
install.packages('reshape')
library(reshape)
mdata <- melt(mydata, id=c("id","time"))
library(reshape)
mdata <- melt(small, id=c("id","time"))
library(reshape)
mdata <- melt(small, id=c("id","time"))
print(small)
library(reshape)
mdata <- melt(small, id=c("id","time"))
print(small)
print(mdata)
library(psych)
library(ggplot2)
library(car)
library(GGally)
install.packages(GGally)
install.packages('GGally')
subjmeans <- cast(mdata, id~variable, mean)
timemeans <- cast(mdata, time~variable, mean)
# cast(data, formula, function)
subjmeans <- cast(mdata, id~variable, mean)
print(subjmeans)
timemeans <- cast(mdata, time~variable, mean)
print(timemenas)
# cast(data, formula, function)
subjmeans <- cast(mdata, id~variable, mean)
print(subjmeans)
timemeans <- cast(mdata, time~variable, mean)
print(timemeans)
id<-c(1,1,2,2)
time<-c(1,2,1,2)
depress<-c(5,3,6,2)
anxiety<-c(6,5,1,4)
small<-data.frame(id,time,depress,anxiety)
str(small)
library(reshape)
mdata <- melt(small, id=c("id","time"))
print(small)
print(mdata)
# cast(data, formula, function)
subjmeans <- cast(mdata, id~variable, mean)
print(subjmeans)
timemeans <- cast(mdata, time~variable, mean)
print(timemeans)
?reshape()
?reshape()
reshape(small, timevar="time")
?reshape()
reshape(small,direction="long", timevar="time", )
?reshape()
reshape(small, Varring="depress",direction="long", timevar="time", )
?reshape()
reshape(small, varying="depress",direction="long", timevar="time", )
?reshape()
reshape(small, varying="time",direction="long", timevar="time", )
?reshape()
reshape(small, varying=NULL,direction="long", timevar="time", )
?reshape()
reshape(small, varying= "depress",direction="long", timevar="time", )
?reshape()
reshape(small, varying= "time",direction="long", timevar="depress", )
?reshape()
reshape(small, idvar="id", varying= c("depress","anxiety"),v.name=c("value"), times=c("depress","anxiety"),direction="long" )
View(mdata)
View(subjmeans)
View(timemeans)
country<-data.frame(c("A","B","C"),c(100,200,120),c(2000,7000,15000))
colnames(country)<- c("countries","population","gdp")
country
country_w_to_l<-reshape(data=country, idvar="countries", varing = c("gdp,population"),v.name=c("value"), times=c("population","gdp"), new.row.names=1:100, directiob="long")
country_w_to_l<-reshape(data=country, idvar="countries", varing = c("gdp,population"),v.name=c("value"), times=c("population","gdp"), new.row.names=1:100, direction="long")
country_w_to_l<-reshape(data=country, idvar="countries", varing = c("population","gdp"),v.name=c("value"), times=c("population","gdp"), new.row.names=1:1000, direction="long")
country_w_to_L<- reshape(data=country, idvar="countries",
varying = c("population","gdp"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names = 1:1000,
direction="long")
country_w_to_L<- reshape(data=country, idvar="contries",
varing=c("population","gdp"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names=1:1000,
direction="long")
country_w_to_L<- reshape(data=country, idvar="contries",
varying=c("population","gdp"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names=1:1000,
direction="long")
country_w_to_L<- reshape(data=country, idvar="contries",
varying=c("population","gdp"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names=1:1000,
direction="long")
print(country_w_to_L)
country_w_to_L<- reshape(data=country, idvar="idid",
varying=c("population","gdp"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names=1:1000,
direction="long")
print(country_w_to_L)
country_w_to_L<- reshape(data=country, idvar="idid",
varying=c("population"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names=1:1000,
direction="long")
country_w_to_L<- reshape(data=country, idvar="idid",
varying=c("population"),
v.name=c("value"),
times=c("population"),
new.row.names=1:1000,
direction="long")
print(country_w_to_L)
country_w_to_L<- reshape(data=country, idvar="idid",
varying=c("population","gdp"),
v.name=c("value"),
times=c("population"),
new.row.names=1:1000,
direction="long")
country_w_to_L<- reshape(data=country, idvar="countries",
varying=c("population","gdp"),
v.name=c("value"),
times=c("population","gdp"),
new.row.names=1:1000,
direction="long")
print(country_w_to_L)
country_L_to_W<-reshape(
data=country_w_to_L,
v.names="value",
idvar="countries",
timevar="time",
direction="wide"
)
country_L_to_W<-reshape(
data=country_w_to_L,
v.names="value",
idvar="countries",
timevar="time",
direction="wide"
)
print(country_L_to_W)
library(tidyr)
countries_w_to_l_2=gather(country,time,value,population,gdp)
library(tidyr)
countries_w_to_l_2=gather(country,time,value,population,gdp)
print(countries_w_to_l_2)
library(tidyr)
countries_w_to_l_2=gather(country,time,value,population:gdp, factor_key=TRUE)
print(countries_w_to_l_2)
library(tidyr)
countries_l_to_w_2 <-spread(countries_w_to_l_2, time, value)
library(tidyr)
countries_l_to_w_2 <-spread(countries_w_to_l_2, time, value)
print(countries_l_to_w_2)
library(psych)
library(ggplot2)
library(car)
library(GGally)
#install.packages('GGally')
library(lattice)
library(dplyr)
filepath <- "https://quantdev.ssri.psu.edu/sites/qdev/files/wisc3raw.csv"
wisc3raw <- read.csv(file=url(filepath),header=TRUE)
var_names_sub <- c("id",
"verb1","verb2","verb4","verb6",
"perfo1","perfo2","perfo4","perfo6",
"momed","grad")
wiscraw <- wisc3raw[,var_names_sub]
str(wiscraw)
View(wiscraw)
wisc_w_to_l<-reshape(data=wiscraw,
varying=c("verb1","verb2","verb4","verb6",
"perfo1", "perfo2", "perfo4", "perfo6")
timevar=c("value"),
wisclong <- reshape(data=wiscraw,
varying = c("verb1","verb2","verb4","verb6",
"perfo1","perfo2","perfo4","perfo6"),
timevar=c("grade"),
idvar=c("id"),
direction="long", sep="")
View(wisclong)
View(wiscraw)
wisclong <- reshape(data=wiscraw,
varying = c("verb1","verb2","verb4","verb6",
"perfo1","perfo2","perfo4","perfo6"),
timevar=c("score"),
idvar=c("id"),
direction="long", sep="")
View(wisclong)
wisclong <- reshape(data=wiscraw,
varying = c("verb1","verb2","verb4","verb6",
"perfo1","perfo2","perfo4","perfo6"),
timevar=c("time"),
idvar=c("id"),
direction="long", sep="")
wisclong <- reshape(data=wiscraw,
varying = c("verb1","verb2","verb4","verb6",
"perfo1","perfo2","perfo4","perfo6"),
timevar=c("time"),
idvar=c("id"),
direction="long", sep="")
print(head(wisclong,10))
wiscwide <- reshape(data=wisclong,
timevar=c("time"),
idvar=c("id"),
v.names=c("verb","perfo"),
direction="wide", sep="_")
wiscwide <- reshape(data=wisclong,
timevar=c("time"),
idvar=c("id"),
v.names=c("verb","perfo"),
direction="wide", sep="_")
print(head(wiscwide,100))
View(wisc3raw)
View(wisclong)
View(wiscwide)
describe(wisclong$verb)
describe(wiscwide,[c("verb_1","verb_2","verb_4","verb_6")])
describe(wiscwide,[c("verb_1","verb_2","verb_4","verb_6")])
describe(wiscwide[c("verb_1","verb_2","verb_4","verb_6")])
describeBy(wisclong[,c("verb")],group=wisclong$time)
ggplot(data=wisclong, aes(x=verb)) +
geom_histogram(binwidth=5, pad = TRUE, fill="white", color="blue") +
xlab("Verbal Ability") +
facet_grid(time ~ .)
ggplot(data=wisclong, aes(x=verb)) +
geom_histogram(binwidth=5, pad = TRUE, fill="white", color="blue") +
xlab("Verbal Ability") +
facet_grid(id ~ .)
library(lattice)
xyplot(verb ~ time, groups=id,
data=wisclong, type="l",
main="verbal trajectory")
ggplot(data = wisclong, aes(x =time, y = verb, group = id)) +
geom_point() +
geom_line() +
xlab("time") +
ylab("Verbal Ability") + ylim(0,80) +
scale_x_continuous(breaks=seq(1,5,by=1))
library(lattice)
xyplot(verb ~ time, groups=id,
data=wisclong, type="l",
main="verbal trajectory")
# ggplot(data = wisclong, aes(x =time, y = verb, group = id)) +
#   geom_point() +
#   geom_line() +
#   xlab("time") +
#   ylab("Verbal Ability") + ylim(0,80) +
#   scale_x_continuous(breaks=seq(1,5,by=1))
ggplot(data=wisclong[which(wisclong$id<=20)],), aes(x=grade, y=verb, group=id) +
ggplot(data=wisclong[which(wisclong$id<=20)],), aes(x=time, y=verb, group=id) +
ggplot(data=wisclong[which(wisclong$id<=20),], aes(x=time, y=verb, group=id) +
geom_point()+
geom_line(data=wisclong[which(wisclong$id <=20 & wisclong$verb !="NA"),]+
xlab("time")+
ylab("verbal")+ylim(0,100) +
facet_wrap(~id)
ggplot(data=wisclong[which(wisclong$id<=20),], aes(x=time, y=verb, group=id) +
geom_point()+
geom_line(data=wisclong[which(wisclong$id <=20 & wisclong$verb !="NA"),])+
xlab("time")+
ylab("verbal")+ylim(0,100) +
facet_wrap(~id)
ggplot(data=wisclong[which(wisclong$id<=20),], aes(x=time, y=verb, group=id)) +
geom_point()+
geom_line(data=wisclong[which(wisclong$id <=20 & wisclong$verb !="NA"),])+
xlab("time")+
ylab("verbal")+ylim(0,100) +
facet_wrap(~id)
ggplot(data=wisclong[which(wisclong$id<=20),], aes(x=time, y=verb, group=id)) +
geom_point()+
geom_line(data=wisclong[which(wisclong$id <=20 & wisclong$verb !="NA"),])+
xlab("time")+
ylab("verbal")+ylim(0,100) +
facet_wrap(~id)
